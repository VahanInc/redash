# This configuration file is for the **development** setup.
# For a production example please refer to getredash/setup repository on GitHub.
version: "2.2"
x-redash-service: &redash-service
  build:
    context: .
#    args:
#      skip_frontend_build: ""
#  volumes:
#    - .:/app
  env_file:
    - .env
x-redash-environment: &redash-environment
  REDASH_LOG_LEVEL: "INFO"
  REDASH_REDIS_URL: "redis://redis:6379/0"
  REDASH_DATABASE_URL: "postgresql://redash:${PG_PASS}@postgres:5432/redash"
  #REDASH_DATABASE_URL: "postgresql://UserName:PassWorld@Host:Port/DataBaseName"
  REDASH_RATELIMIT_ENABLED: "false"
  REDASH_ENFORCE_CSRF: "true"
  # Set secret keys in the .env file
services:
  server:
    <<: *redash-service
    command: dev_server
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - postgres
      - redis
    ports:
      - "5000:5000"
      - "5678:5678"
    environment:
      <<: *redash-environment
      PYTHONUNBUFFERED: 0
    restart: unless-stopped
  scheduler:
    <<: *redash-service
    command: dev_scheduler
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - server
    environment:
      <<: *redash-environment
    restart: unless-stopped
  worker_scheduled_queries:
    <<: *redash-service
    command: dev_worker
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - server
    environment:
      <<: *redash-environment
      PYTHONUNBUFFERED: 0
      QUEUES: scheduled_queries
    restart: unless-stopped
  worker_queries:
    <<: *redash-service
    command: dev_worker
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - server
    environment:
      <<: *redash-environment
      QUEUES: queries,schemas
      WORKERS_COUNT: 4
      PYTHONUNBUFFERED: 0
    restart: unless-stopped
  worker_long_queries:
    <<: *redash-service
    command: dev_worker
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - server
    environment:
      <<: *redash-environment
      QUEUES: long_queries
      PYTHONUNBUFFERED: 0
    restart: unless-stopped
  worker_operational:
    <<: *redash-service
    command: dev_worker
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - server
    environment:
      <<: *redash-environment
      QUEUES: periodic,emails,default
      PYTHONUNBUFFERED: 0
    restart: unless-stopped
  redis:
    image: redis:5.0.14
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "6379:6379"
    restart: unless-stopped
  postgres:
    image: postgres:9.5.14
    # The following turns the DB into less durable, but gains significant performance improvements for the tests run (x3
    # improvement on my personal machine). We should consider moving this into a dedicated Docker Compose configuration for
    # tests.
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "15432:5432"
#    command: "postgres -c fsync=off -c full_page_writes=off -c synchronous_commit=OFF"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=redash
      - POSTGRES_DB=redash
      - POSTGRES_PASSWORD=${PG_PASS}
    volumes:
      - ${PG_DATA_MOUNT}:/var/lib/postgresql/data
